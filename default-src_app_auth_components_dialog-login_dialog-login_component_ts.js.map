{"version":3,"file":"default-src_app_auth_components_dialog-login_dialog-login_component_ts.js","mappings":"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","sources":["./src/app/auth/components/dialog-login/dialog-login.component.ts","./src/app/auth/components/dialog-login/dialog-login.component.html","./src/app/core/types/index.ts"],"sourcesContent":["import { Component } from '@angular/core'\nimport { FormBuilder, Validators } from '@angular/forms'\nimport { ApiService } from '@core/services/api.service'\nimport { LoginType } from '@core/types'\nimport { catchError, finalize, takeUntil, throwError } from 'rxjs'\nimport { Router } from '@angular/router'\nimport { MatLegacyDialogRef as MatDialogRef } from '@angular/material/legacy-dialog'\nimport { HttpErrorResponse } from '@angular/common/http'\nimport { AuthUserService } from '@core/services/auth-user.service'\nimport { Form } from '@core/common/form2'\nimport { MicroserviceType as ms, MicroserviceType } from '@core/enums/microservice-type.enum'\nimport { LocalStorageService } from '@core/services/local-storage.service'\n\n@Component({\n  selector: 'app-dialog-login',\n  templateUrl: './dialog-login.component.html',\n  styleUrls: ['./dialog-login.component.scss']\n})\nexport class DialogLoginComponent extends Form {\n\n  public loginType?: LoginType\n  public trusted: boolean = true\n  public invalid: boolean = false\n  public retryIn: number = 120\n  public retryIntervalId: ReturnType<typeof setInterval>\n  public tried = false\n  protected formFields = {\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', Validators.required ]\n  }\n  public loading = false\n  private secretKey = ''\n\n  constructor(\n    private api: ApiService,\n    private localStorage: LocalStorageService,\n    private router: Router,\n    private authService: AuthUserService,\n    private fb: FormBuilder,\n    private dialogRef: MatDialogRef<DialogLoginComponent>) {\n    super()\n    this._initFormControl(fb, this.formFields)\n  }\n\n  resend(event: any) {\n    event.preventDefault()\n\n    if (this.retryIn > 0) {\n      return\n    }\n\n    this.api.post('login/resend-code', { email: this.getFC('email').value })\n      .subscribe(() => {\n        this.startRetryInterval()\n      })\n  }\n\n  public fetchLoginType() {\n    if (this.getFC('email').value.invalid) {\n      return\n    }\n\n    const handleError = ({ message }: HttpErrorResponse) => {\n      setTimeout(() => this.setError('email', 'not_found', message) )\n      return throwError(() => new Error('Something bad happened; please try again later.'))\n    }\n\n    this.loading = true\n    const options = { params: { email: this.getFC('email').value }, responseType: 'text' }\n    this.api.get('user-info/auth-mode', MicroserviceType.usr, options)\n      .pipe(catchError(handleError), takeUntil(this.destroy$), finalize(() => this.loading = false))\n      .subscribe((data) => {\n        this.loginType = data\n        this.tried = true\n        this.getFC('email').markAsTouched()\n        this.getFC('email').disable()\n        this.startRetryInterval()\n\n        if (this.loginType === LoginType.Code) {\n          this.sendCode()\n        }\n      })\n  }\n\n  sendCode() {\n    this.loading = true\n    this.api.post('send-otp-code', { email: this.getFCValue('email') }, ms.au, { responseType: 'text' })\n      .pipe(finalize(() => this.loading = false))\n      .subscribe((key) => {\n        this.secretKey = key\n        this.startRetryInterval()\n      })\n  }\n\n  private codeLogin() {\n    this.loading = true\n    const data = { secretKey: this.secretKey, code: this.getFCValue('password') }\n    this.api.post('check-otp-code', data, ms.au)\n      .pipe(\n        catchError(({ error: { message } }: HttpErrorResponse) => {\n          this.invalid = true\n          return throwError(() => new Error(message))\n        })\n      )\n      .pipe(finalize(() => this.loading = false))\n      .subscribe((data) => {\n        this.authService.setAuthToken(data.id_token)\n          .subscribe(() => {\n            this.dialogRef.close(null)\n          })\n      })\n  }\n\n  public login() {\n\n    if (this.loginType === LoginType.Code) {\n      return this.codeLogin()\n    }\n\n    const data: any = { email: this.getFC('email').value, trusted: this.trusted }\n    data['password'] = this.getFC('password').value\n\n    this.api.post('login', data)\n      .pipe(\n        catchError(({ error: { message } }: HttpErrorResponse) => {\n          const msg = this.loginType === 'CODE' ? 'invalid_code' : 'invalid_password'\n          this.setError('password', msg, true)\n          return throwError(() => new Error(message))\n        })\n      )\n      .subscribe((data) => {\n        this.authService.setAuthToken(data.id_token).subscribe()\n        this.dialogRef.close(null)\n      })\n\n  }\n\n  close() {\n    this.dialogRef.close(null)\n  }\n\n  goto(route: string) {\n    this.close()\n    this.router.navigate([route])\n  }\n\n  private startRetryInterval() {\n    clearInterval(this.retryIntervalId)\n    this.retryIn = 35\n\n    this.retryIntervalId = setInterval(() => {\n      this.retryIn -= 1\n      if (this.retryIn <= 0) {\n        clearInterval(this.retryIntervalId)\n      }\n    }, 1000)\n  }\n\n  back() {\n    if (this.loginType) {\n      this.loginType = undefined\n      this.getFC('email').enable()\n    } else {\n      this.close()\n    }\n  }\n}\n","<div class=\"d-flex header justify-content-between p-3 p-sm-3\">\n\n  <div class=\"d-flex align-items-center d-none d-sm-flex\">\n    <div class=\"d-flex bg-white px-1 me-2 star-icon-wrapper fs-lg\">\n      <mat-icon color=\"primary\" inline>login</mat-icon>\n    </div>\n    <span class=\"mb-0\">Sign in</span>\n  </div>\n\n  <div class=\"d-flex align-items-center d-sm-none\">\n    <mat-icon class=\"title-icon me-1 cur-pointer\">close</mat-icon>\n    <div class=\"d-inline-flex flex-wrap\">\n      <span class=\"mb-0 fw-bold text-nowrap me-2\">Sign in with</span>\n      <app-auth-dios class=\"d-inline-block text-nowrap\">Auth</app-auth-dios>\n    </div>\n  </div>\n\n  <div class=\"d-flex align-items-center text-primary d-none d-sm-flex cancel-icon\">\n    <mat-icon inline>arrow_back_ios</mat-icon>\n    <span class=\"text-decoration-underline cur-pointer\" (click)=\"back()\">Back</span>\n  </div>\n</div>\n\n<div class=\"px-3 pb-4\" mat-dialog-content>\n\n  <div class=\"mt-4\">\n\n    <div class=\"d-flex d-sm-none justify-content-center img-wrapper\">\n      <img src=\"assets/images/send_mail.png\">\n    </div>\n\n\n    <app-auth-dios>Auth</app-auth-dios>\n    <app-input class=\"d-block mt-3\" [control]=\"getFC('email')\" label=\"Email address\"></app-input>\n\n    <div>\n\n      <div class=\"fs-md-s\" *ngIf=\"loginType === 'CODE'\">\n        We've sent you a code on the email, please fill in the field below. (Optional: You have a link in the email as alternate login.)\n      </div>\n      <div class=\"fs-md-s\" *ngIf=\"loginType === 'PASSWORD'\">\n        We have detected that you use password as method of login.\n      </div>\n\n      <app-input\n        class=\"d-block mt-4\"\n        type=\"password\"\n        [control]=\"getFC('password')\"\n        [label]=\"loginType === 'CODE' ? 'Verification code' : 'Password'\"\n        *ngIf=\"loginType\"\n      ></app-input>\n\n      <div class=\"text-end\" *ngIf=\"loginType === 'CODE'\">\n        <span *ngIf=\"!invalid\" class=\"text-black-50 me-2\">Code missing?</span>\n        <span *ngIf=\"invalid\" class=\"primary-400 me-2\">Oh snap! try again or</span>\n        <a href=\"#\" (click)=\"resend($event)\">Resend ({{ retryIn }}s)</a>\n      </div>\n      <div class=\"text-end\" *ngIf=\"loginType === 'PASSWORD'\">\n        <a href=\"#\" (click)=\"goto('/auth/forgot/password')\">Forgot password?</a>\n      </div>\n\n      <div class=\"form-check form-check-inline trusted-wrapper\" *ngIf=\"loginType === 'CODE'\">\n        <input [(ngModel)]=\"trusted\" class=\"form-check-input\" type=\"checkbox\" id=\"trusted-device\" name=\"trusted\">\n        <label class=\"form-check-label fs-s\" for=\"trusted-device\">This is a trusted device. Don't ask me for the next 30 days.</label>\n      </div>\n\n      <div class=\"mt-4.5 d-flex justify-content-center\">\n        <button class=\"btn btn-primary px-5 py-2 mb-4 mb-md-2 col-12 col-sm-auto fs-l\" (click)=\"fetchLoginType()\" *ngIf=\"!loginType\" [appLoading]=\"loading\">\n          Continue\n        </button>\n        <button class=\"btn btn-primary px-5 py-2 col-12 col-sm-auto fs-l\" (click)=\"login()\" *ngIf=\"loginType\" [appLoading]=\"loading\">\n          Login\n        </button>\n      </div>\n\n      <mat-divider class=\"divider-light mt-5\" *ngIf=\"tried\"></mat-divider>\n\n      <div class=\"mt-4\" *ngIf=\"tried\">\n        <span>Lost access to email?</span>\n        <div class=\"mt-2 d-flex justify-content-center\">\n          <button class=\"btn btn-outline-primary px-4 py-2 col-12 col-sm-auto fs-l\" (click)=\"goto('/auth/forgot/email')\">Reboot</button>\n        </div>\n\n      </div>\n\n    </div>\n  </div>\n\n</div>\n","export type FilterOption = {\n  name?: string,\n  // label: string,\n  id: number,\n  minValue: number,\n  maxValue: number,\n  // value?: string,\n  count: number\n  checked?: boolean\n}\n\nexport type CategoryFilter = {\n  name: string,\n  title: string\n  count: number,\n  type: string,\n  options: Array<FilterOption>\n}\n\nexport type BreadcrumbMenu = {\n  slug: string,\n  title: string\n}\n\nexport enum LoginType {\n  Code = 'CODE',\n  Password = 'PASSWORD'\n}\n"],"names":["Validators","LoginType","catchError","finalize","takeUntil","throwError","Form","MicroserviceType","ms","i0","DialogLoginComponent","constructor","api","localStorage","router","authService","fb","dialogRef","email","required","password","_initFormControl","formFields","resend","event","preventDefault","retryIn","post","getFC","value","subscribe","startRetryInterval","fetchLoginType","invalid","handleError","message","setTimeout","setError","Error","loading","options","params","responseType","get","usr","pipe","destroy$","data","loginType","tried","markAsTouched","disable","Code","sendCode","getFCValue","au","key","secretKey","codeLogin","code","error","setAuthToken","id_token","close","login","trusted","msg","goto","route","navigate","clearInterval","retryIntervalId","setInterval","back","undefined","enable","selectors","features","decls","vars","consts","template","ctx"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}